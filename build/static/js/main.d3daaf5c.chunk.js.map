{"version":3,"sources":["components/JoinBlock.jsx","socket.js","reducer.js","components/Chat.jsx","App.js","index.js"],"names":["onLogin","useState","roomId","userName","formData","setFormdata","isLoading","setIsLoading","handleInput","target","name","value","handleClick","useCallback","obj","axios","post","then","console","warn","className","type","placeholder","onChange","disabled","onClick","socket","io","state","action","payload","joined","users","messages","currentUser","messageBlock","useRef","text","setText","useEffect","current","scrollTo","scrollHeight","length","map","user","key","style","color","ref","message","alignSelf","backgroundColor","onSubmit","e","preventDefault","emit","rows","App","useReducer","reducer","dispatch","a","data","userAction","on","Chat","JoinBlock","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAGe,cAAgB,IAAdA,EAAa,EAAbA,QAAa,EACMC,mBAAS,CACrCC,OAAQ,GACRC,SAAU,KAHY,mBACnBC,EADmB,KACTC,EADS,OAMQJ,oBAAS,GANjB,mBAMnBK,EANmB,KAMRC,EANQ,KAQnBL,EAAoBE,EAApBF,OAAQC,EAAYC,EAAZD,SAETK,EAAc,SAAC,GAA+B,IAAD,IAA7BC,OAAUC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,MAClCN,GAAY,SAAAD,GAAQ,kCACbA,GADa,kBAEfM,EAAOC,QAIZC,EAAcC,uBAAa,WAC3B,GAAKX,GAAWC,EAAhB,CAIAI,GAAa,GAEb,IAAMO,EAAM,CAACZ,SAASC,YAEtBY,IAAMC,KAAK,SAAUF,GAChBG,MAAK,WACFjB,EAAQc,WATZI,QAAQC,KAAK,yBAWlB,CAACnB,EAASE,EAAQC,IAErB,OACI,yBAAKiB,UAAW,SACZ,2BACIV,KAAM,SACNW,KAAK,OACLC,YAAa,UACbX,MAAOT,EACPqB,SAAUf,IAGd,2BACIE,KAAM,WACNW,KAAK,OACLC,YAAa,YACbX,MAAOR,EACPoB,SAAUf,IAGd,4BACIgB,SAAUlB,EACVc,UAAW,YACXK,QAASb,GAERN,EAAY,8BAAY,oC,QCvD1BoB,E,MAFAC,KCDA,WAACC,EAAOC,GACnB,OAAQA,EAAOR,MACX,IAAK,SAAL,MAC+BQ,EAAOC,QAA3B5B,EADX,EACWA,OAAQC,EADnB,EACmBA,SAEf,OAAO,2BACAyB,GADP,IAEIG,QAAQ,EACR7B,SACAC,aAGR,IAAK,YACD,OAAO,2BACAyB,GADP,IAEII,MAAOH,EAAOC,UAGtB,IAAK,eACD,OAAO,2BACAF,GADP,IAEIK,SAAUJ,EAAOC,UAGzB,IAAK,mBACD,OAAO,2BACAF,GADP,IAEIM,YAAaL,EAAOC,UAE5B,QAAS,OAAOF,ICzBT,G,OAAA,YAA4C,IAAzCI,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,SAAU9B,EAAuB,EAAvBA,SAAUD,EAAa,EAAbA,OACnCiC,EAAeC,iBAAO,MAD0B,EAG9BnC,mBAAS,IAHqB,mBAG/CoC,EAH+C,KAGzCC,EAHyC,KAetDC,qBAAU,WALFJ,GAAgBA,EAAaK,SAC7BL,EAAaK,QAAQC,SAAS,EAAGN,EAAaK,QAAQE,gBAM3D,CAACT,IAiBJ,OACI,yBAAKb,UAAW,WACZ,yBAAKA,UAAW,cACZ,gFAAelB,IACf,6BACA,2EACgB8B,EAAMW,OADtB,OAIA,4BACKX,EAAMY,KAAI,SAACC,EAAMC,GACd,OACI,wBACIA,IAAKA,EACLC,MAAO,CAACC,MAAOH,IAAS1C,EAAW,SAAW,SAE7C0C,QAOrB,yBAAKzB,UAAW,iBACZ,yBAAKA,UAAW,WAAa6B,IAAKd,GAE1BF,EAASW,KAAI,SAACM,EAASJ,GAAV,OACT,yBACI1B,UAAW,UACX2B,MAAO,CAACI,UAAWD,EAAQ/C,WAAaA,EAAW,aAAe,YAClE2C,IAAKA,EAAII,EAAQ/C,UAGjB,uBACI4C,MAAO,CAACK,gBAAiBF,EAAQ/C,WAAaA,EAAW,SAAW,SAEnE+C,EAAQb,MAGb,6BACI,2BACIU,MAAO,CAACC,MAAOE,EAAQ/C,WAAaA,EAAW,SAAW,SAEzD+C,EAAQ/C,gBAUjC,0BAAMkD,SApEG,SAAAC,GAEjB,GADAA,EAAEC,iBACGlB,EAAL,CAGA,IAAMvB,EAAM,CACRuB,OACAnC,SACAC,YAEJuB,EAAO8B,KAAK,oBAAqB1C,GAEjCwB,EAAQ,OAyDI,8BACI5B,KAAK,OACL+C,KAAK,IACL9C,MAAO0B,EACPf,YAAa,sIACbC,SAxFC,SAAC,GAAyB,IAAdZ,EAAa,EAAvBF,OAAUE,MAC7B2B,EAAQ3B,MA4FI,4BACIU,KAAM,SACNG,UAAWa,GAEV,+DCzCVqB,MAzDf,WAAgB,IAAD,EACeC,qBAAWC,EAAS,CAC1C7B,QAAQ,EACR7B,OAAQ,KACRC,SAAU,KACV6B,MAAO,GACPC,SAAU,KANH,mBACJL,EADI,KACGiC,EADH,KASL7D,EAAO,uCAAG,WAAMc,GAAN,qBAAAgD,EAAA,6DACZD,EAAS,CACLxC,KAAM,SACNS,QAAShB,IAGbY,EAAO8B,KAAK,YAAa1C,GANb,SAQ8BC,MAAA,iBAAoBD,EAAIZ,SARtD,oBAQL6D,KAAQ/B,EARH,EAQGA,MAAOC,EARV,EAQUA,SAGtB4B,EAAS,CACLxC,KAAM,YACNS,QAASE,IAGb6B,EAAS,CACLxC,KAAM,eACNS,QAASG,IAlBD,4CAAH,sDAuBP+B,EAAa,SAAAhC,GACf6B,EAAS,CACLxC,KAAM,YACNS,QAASE,KAejB,OAXAO,qBAAU,WACNb,EAAOuC,GAAG,iBAAkBD,GAE5BtC,EAAOuC,GAAG,qBAAqB,SAACnC,GAAD,OAC3B+B,EAAS,CACTxC,KAAM,eACNS,iBAGL,IAGC,yBAAKV,UAAU,WACTQ,EAAMG,OAA0C,kBAACmC,EAAStC,GAA3C,kBAACuC,EAAD,CAAWnE,QAASA,MCvDjDoE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.d3daaf5c.chunk.js","sourcesContent":["import React, {useCallback,  useState} from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default ({onLogin}) => {\r\n    const [formData, setFormdata] = useState({\r\n        roomId: \"\",\r\n        userName: \"\"\r\n    });\r\n\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const {roomId, userName} = formData;\r\n\r\n    const handleInput = ({target: { name, value }}) => {\r\n        setFormdata(formData => ({\r\n            ...formData,\r\n            [name]: value\r\n        }))\r\n    }\r\n\r\n    let handleClick = useCallback( () => {\r\n        if (!roomId || !userName) {\r\n            console.warn(\"Data not entered!!!\");\r\n            return;\r\n        }\r\n        setIsLoading(true);\r\n\r\n        const obj = {roomId , userName };\r\n\r\n        axios.post(\"/rooms\", obj)\r\n            .then(() => {\r\n                onLogin(obj);\r\n            });\r\n    }, [onLogin, roomId, userName]);\r\n\r\n    return (\r\n        <div className={\"block\"}>\r\n            <input\r\n                name={\"roomId\"}\r\n                type=\"text\"\r\n                placeholder={\"Room ID\"}\r\n                value={roomId}\r\n                onChange={handleInput}\r\n            />\r\n\r\n            <input\r\n                name={\"userName\"}\r\n                type=\"text\"\r\n                placeholder={\"YOUR NAME\"}\r\n                value={userName}\r\n                onChange={handleInput}\r\n            />\r\n\r\n            <button\r\n                disabled={isLoading}\r\n                className={\"btn-input\"}\r\n                onClick={handleClick}\r\n            >\r\n                {isLoading ? \"ВХОД...\" : \"ВОЙТИ\"}\r\n            </button>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n","import io from \"socket.io-client\";\r\nconst socket = io();\r\n\r\nexport default socket;\r\n","export default (state, action) => {\r\n    switch (action.type) {\r\n        case \"JOINED\":\r\n            const {roomId, userName} = action.payload;\r\n\r\n            return {\r\n                ...state,\r\n                joined: true,\r\n                roomId,\r\n                userName\r\n            }\r\n\r\n        case \"SET_USERS\":\r\n            return {\r\n                ...state,\r\n                users: action.payload\r\n            }\r\n\r\n        case \"SET_MESSAGES\":\r\n            return {\r\n                ...state,\r\n                messages: action.payload\r\n            }\r\n\r\n        case \"SET_CURRENT_USER\":\r\n            return {\r\n                ...state,\r\n                currentUser: action.payload\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\n","import React, {useEffect, useRef, useState} from \"react\";\r\nimport \"./chat.css\";\r\nimport socket from \"../socket\";\r\n\r\nexport default ({ users, messages, userName, roomId }) => {\r\n    const messageBlock = useRef(null);\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleChange = ({target: { value }}) => {\r\n        setText(value)\r\n    }\r\n\r\n    const scrollBottom = () => {\r\n        if (messageBlock && messageBlock.current) {\r\n            messageBlock.current.scrollTo(0, messageBlock.current.scrollHeight)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        scrollBottom();\r\n    }, [messages])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        if (!text) {\r\n            return;\r\n        }\r\n        const obj = {\r\n            text,\r\n            roomId,\r\n            userName\r\n        }\r\n        socket.emit(\"ROOM:SEND_MESSAGE\", obj);\r\n\r\n        setText(\"\");\r\n    }\r\n\r\n    return (\r\n        <div className={\"wrapper\"}>\r\n            <div className={\"chat-users\"} >\r\n                <b>{`КОМНАТА ${roomId}`}</b>\r\n                <hr/>\r\n                <b>\r\n                    {`Онлайн (${users.length}):`}\r\n                </b>\r\n\r\n                <ul>\r\n                    {users.map((user, key) => {\r\n                        return (\r\n                            <li\r\n                                key={key}\r\n                                style={{color: user === userName ? \"tomato\" : \"blue\"}}\r\n                            >\r\n                                {user}\r\n                            </li>\r\n                        )\r\n                    })}\r\n                </ul>\r\n            </div>\r\n\r\n            <div className={\"chat-messages\"}>\r\n                <div className={\"messages\"}  ref={messageBlock}>\r\n                    {\r\n                        messages.map((message, key) => (\r\n                            <div\r\n                                className={\"message\"}\r\n                                style={{alignSelf: message.userName === userName ? \"flex-start\" : \"flex-end\"}}\r\n                                key={key+message.userName}\r\n                                // ref={messageBlock}\r\n                            >\r\n                                <p\r\n                                    style={{backgroundColor: message.userName === userName ? \"tomato\" : \"blue\"}}\r\n                                >\r\n                                    {message.text}\r\n                                </p>\r\n\r\n                                <div>\r\n                                    <small\r\n                                        style={{color: message.userName === userName ? \"tomato\" : \"blue\"}}\r\n                                    >\r\n                                        {message.userName}\r\n                                    </small>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    }\r\n                </div>\r\n\r\n\r\n\r\n                <form onSubmit={handleSubmit}>\r\n                    <textarea\r\n                        name=\"text\"\r\n                        rows=\"3\"\r\n                        value={text}\r\n                        placeholder={\"Напишите свое сообщение...\"}\r\n                        onChange={handleChange}\r\n                    >\r\n\r\n                    </textarea>\r\n\r\n                    <button\r\n                        type={\"submit\"}\r\n                        disabled={!text}\r\n                    >\r\n                        {\"Отправить\"}\r\n                    </button>\r\n                </form>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n","import React, {useEffect, useReducer} from 'react';\nimport './App.css';\nimport JoinBlock from \"./components/JoinBlock\";\nimport socket from \"./socket\";\nimport reducer from \"./reducer\";\nimport Chat from \"./components/Chat\";\nimport * as axios from \"axios\";\n\nfunction App() {\n    const [state, dispatch] = useReducer(reducer, {\n        joined: false,\n        roomId: null,\n        userName: null,\n        users: [],\n        messages: []\n    });\n\n    const onLogin = async obj => {\n        dispatch({\n            type: \"JOINED\",\n            payload: obj\n        });\n\n        socket.emit(\"ROOM:JOIN\", obj);\n\n        const {data: { users, messages }} = await axios.get(`/rooms/${obj.roomId}`);\n\n\n        dispatch({\n            type: \"SET_USERS\",\n            payload: users\n        });\n\n        dispatch({\n            type: \"SET_MESSAGES\",\n            payload: messages\n        });\n\n    }\n\n    const userAction = users => {\n        dispatch({\n            type: \"SET_USERS\",\n            payload: users\n        })\n    }\n\n    useEffect(() => {\n        socket.on(\"ROOM:SET_USERS\", userAction);\n\n        socket.on(\"ROOM:SET_MESSAGES\", (payload) =>\n            dispatch({\n            type: \"SET_MESSAGES\",\n            payload\n        }));\n\n    }, []);\n\n    return (\n        <div className=\"wrapper\">\n            {!state.joined ? <JoinBlock onLogin={onLogin}/> : <Chat {...state}/>}\n        </div>\n    );\n    }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}